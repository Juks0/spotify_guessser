-- Users table
CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  image BYTEA,            -- Or VARCHAR if storing image URLs
  last_login TIMESTAMP
);

-- Top 50 artists for 1 month period
CREATE TABLE user_top_artists_1month (
  user_id INT REFERENCES users(id) ON DELETE CASCADE,
  artist_name VARCHAR(100) NOT NULL,
  rank INT NOT NULL,
  PRIMARY KEY (user_id, rank)
);

-- Top 50 artists for 6 months period
CREATE TABLE user_top_artists_6months (
  user_id INT REFERENCES users(id) ON DELETE CASCADE,
  artist_name VARCHAR(100) NOT NULL,
  rank INT NOT NULL,
  PRIMARY KEY (user_id, rank)
);

-- Top 50 artists for 1 year period
CREATE TABLE user_top_artists_1year (
  user_id INT REFERENCES users(id) ON DELETE CASCADE,
  artist_name VARCHAR(100) NOT NULL,
  rank INT NOT NULL,
  PRIMARY KEY (user_id, rank)
);

-- Friends table (many-to-many relationship between users)
CREATE TABLE friends (
  user_id INT REFERENCES users(id) ON DELETE CASCADE,
  friend_id INT REFERENCES users(id) ON DELETE CASCADE,
  PRIMARY KEY (user_id, friend_id),
  CHECK (user_id <> friend_id)   -- Prevent self-friendship
);

-- Index to speed friend lookups
CREATE INDEX idx_friends_user ON friends(user_id);
